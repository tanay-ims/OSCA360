# Generated by Django 5.2.4 on 2025-07-24 13:22

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import sc_app.models.senior_citizen
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('sc_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountableForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('PB', 'Purchase Booklet'), ('ID', 'ID Card')], max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='BenefitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('BD_CG', 'Birthday Cash Gift'), ('LGU_SP', 'Local Social Pension'), ('NGA_SP', 'National Social Pension'), ('OT_MB', 'Other Local Monetary Benefit')], max_length=6, unique=True)),
                ('description', models.TextField(blank=True)),
                ('fixed_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_recurring', models.BooleanField(default=False)),
                ('requires_eligibility', models.BooleanField(default=False)),
                ('payroll_schedule', models.CharField(choices=[('NONE', 'None'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly')], default='NONE', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='CityMunicipality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('psgc_code', models.CharField(help_text='9-digit PSGC code (e.g., 012801000 for Adams)', max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'PSGC code must be a 9-digit number.')])),
                ('name', models.CharField(help_text='City/Municipality name (e.g., Adams)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'City_Municipality',
                'verbose_name_plural': 'CitiesMunicipalities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Disability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code for disability (e.g., VIS for Visual Impairment)', max_length=2, unique=True)),
                ('name', models.CharField(help_text='Disability name (e.g., Visual Impairment, Mobility Impairment)', max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='DocumentaryRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=2, unique=True)),
                ('document_type', models.CharField(choices=[('BC', 'Barangay Clearance'), ('ID', 'Identification Card'), ('PX', 'Picture'), ('OT', 'Other')], max_length=2)),
                ('document_name', models.CharField(max_length=30, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('psec_code', models.CharField(help_text='Philippine Standard Education Code (e.g., ELEM for Elementary)', max_length=5, unique=True)),
                ('name', models.CharField(help_text='Education level (e.g., Elementary, High School)', max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['psec_code'],
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code for ethnicity (e.g., TAG for Tagalog)', max_length=3, unique=True)),
                ('name', models.CharField(help_text='Ethnicity name (e.g., Tagalog, Ilocano)', max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code (e.g., 1 for Father, 2 for Mother)', max_length=2, unique=True)),
                ('name', models.CharField(help_text='Relationship type (e.g., Father, Mother)', max_length=30, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique code for religion (e.g., RC for Roman Catholic)', max_length=3, unique=True)),
                ('name', models.CharField(help_text='Religion name (e.g., Roman Catholic)', max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='Signatory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Signatories',
            },
        ),
        migrations.CreateModel(
            name='Barangay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('psgc_code', models.CharField(help_text='9-digit PSGC code (e.g., 012801001 for Adams Poblacion)', max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'PSGC code must be a 9-digit number.')])),
                ('name', models.CharField(help_text='Barangay name (e.g., Poblacion)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('city_municipality', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barangays', to='sc_app.citymunicipality')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.PositiveIntegerField()),
                ('quantity_issued', models.PositiveIntegerField(default=0)),
                ('date_received', models.DateField()),
                ('form_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='sc_app.accountableform')),
            ],
            options={
                'verbose_name_plural': 'Inventories',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('psgc_code', models.CharField(help_text='9-digit PSGC code (e.g., 012800000 for Ilocos Norte)', max_length=9, unique=True, validators=[django.core.validators.RegexValidator('^\\d{9}$', 'PSGC code must be a 9-digit number.')])),
                ('name', models.CharField(help_text='Province name (e.g., Ilocos Norte)', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provinces', to='sc_app.region')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='citymunicipality',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities_municipalities', to='sc_app.province'),
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name of emergency contact', max_length=200)),
                ('contact_number', models.CharField(blank=True, max_length=15)),
                ('address', models.TextField()),
                ('barangay', models.ForeignKey(help_text='Barangay of emergency contact', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.barangay')),
                ('city_municipality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.citymunicipality')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.region')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.province')),
                ('relationship', models.ForeignKey(help_text='Relationship to senior citizen', null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.relationship')),
            ],
        ),
        migrations.CreateModel(
            name='SeniorCitizen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osca_id', models.CharField(max_length=6, unique=True)),
                ('registry_reference_number', models.CharField(max_length=7, unique=True)),
                ('firstname', models.CharField(max_length=50)),
                ('middlename', models.CharField(blank=True, max_length=50, null=True)),
                ('lastname', models.CharField(max_length=50)),
                ('suffix', models.CharField(blank=True, max_length=4, null=True)),
                ('address', models.TextField()),
                ('date_of_birth', models.DateField()),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('civil_status', models.CharField(choices=[('S', 'Single'), ('M', 'Married'), ('W', 'Widowed'), ('D', 'Divorced'), ('SP', 'Separated')], max_length=2)),
                ('contact_number', models.CharField(blank=True, max_length=15)),
                ('status', models.CharField(choices=[('A', 'Active'), ('D', 'Deceased'), ('T', 'Transferred')], default='A', max_length=1)),
                ('date_enrolled', models.DateField(default=django.utils.timezone.now)),
                ('barangay', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.barangay')),
                ('city_municipality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.citymunicipality')),
                ('disability', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.disability')),
                ('emergency_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.emergencycontact')),
                ('ethnicity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.ethnicity')),
                ('place_of_birth_city_municipality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seniors_born_city', to='sc_app.citymunicipality')),
                ('place_of_birth_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seniors_born_province', to='sc_app.province')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.province')),
                ('relationship', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.relationship')),
                ('religion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sc_app.religion')),
            ],
            options={
                'verbose_name_plural': 'Senior Citizens',
            },
        ),
        migrations.CreateModel(
            name='DeathDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_death', models.DateField()),
                ('cause_of_death', models.CharField(blank=True, max_length=200)),
                ('certificate_number', models.CharField(blank=True, max_length=20)),
                ('senior_citizen', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='death_detail', to='sc_app.seniorcitizen')),
            ],
        ),
        migrations.CreateModel(
            name='SeniorCitizenDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to=sc_app.models.senior_citizen.get_document_upload_path)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sc_app.documentaryrequirement')),
                ('senior_citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sc_app.seniorcitizen')),
            ],
            options={
                'unique_together': {('senior_citizen', 'document')},
            },
        ),
        migrations.AddField(
            model_name='seniorcitizen',
            name='documents',
            field=models.ManyToManyField(blank=True, through='sc_app.SeniorCitizenDocument', to='sc_app.documentaryrequirement'),
        ),
        migrations.CreateModel(
            name='TransferDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transfer_date', models.DateField()),
                ('destination', models.CharField(max_length=200)),
                ('reason', models.TextField(blank=True)),
                ('senior_citizen', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transfer_detail', to='sc_app.seniorcitizen')),
            ],
        ),
        migrations.CreateModel(
            name='MissedPayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_age', models.CharField(blank=True, max_length=3)),
                ('year', models.PositiveIntegerField()),
                ('month', models.PositiveIntegerField(blank=True, null=True)),
                ('quarter', models.PositiveIntegerField(blank=True, null=True)),
                ('tagged_at', models.DateTimeField(auto_now_add=True)),
                ('remarks', models.TextField(blank=True)),
                ('barangay', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missed_payouts', to='sc_app.barangay')),
                ('benefit_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='missed_payouts', to='sc_app.benefittype')),
                ('senior_citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='missed_payouts', to='sc_app.seniorcitizen')),
            ],
            options={
                'verbose_name_plural': 'Missed Payouts',
                'indexes': [models.Index(fields=['year', 'month', 'quarter'], name='sc_app_miss_year_4531dc_idx')],
                'unique_together': {('senior_citizen', 'benefit_type', 'milestone_age', 'year', 'month', 'quarter')},
            },
        ),
        migrations.CreateModel(
            name='MilestoneBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_age', models.CharField(choices=[('80', 'Age 80'), ('85', 'Age 85'), ('90', 'Age 90'), ('95', 'Age 95'), ('100', 'Age 100')], max_length=3)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disbursement_date', models.DateField()),
                ('payroll_reference', models.CharField(blank=True, max_length=50)),
                ('is_repayroll', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True)),
                ('senior_citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestone_benefits', to='sc_app.seniorcitizen')),
            ],
            options={
                'verbose_name_plural': 'Milestone Benefits',
                'indexes': [models.Index(fields=['disbursement_date', 'milestone_age'], name='sc_app_mile_disburs_bad993_idx')],
                'unique_together': {('senior_citizen', 'milestone_age')},
            },
        ),
        migrations.CreateModel(
            name='Issuance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuance_date', models.DateField()),
                ('remarks', models.TextField(blank=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuances', to='sc_app.inventory')),
                ('senior_citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='issuances', to='sc_app.seniorcitizen')),
            ],
            options={
                'verbose_name_plural': 'Issuances',
                'unique_together': {('senior_citizen', 'inventory')},
            },
        ),
        migrations.CreateModel(
            name='Eligibility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_eligible', models.BooleanField(default=True)),
                ('eligibility_date', models.DateField()),
                ('remarks', models.TextField(blank=True)),
                ('benefit_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eligibilities', to='sc_app.benefittype')),
                ('senior_citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eligibilities', to='sc_app.seniorcitizen')),
            ],
            options={
                'unique_together': {('senior_citizen', 'benefit_type')},
            },
        ),
        migrations.CreateModel(
            name='BenefitDisbursement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('disbursement_date', models.DateField()),
                ('payroll_reference', models.CharField(blank=True, max_length=50)),
                ('is_repayroll', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True)),
                ('benefit_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disbursements', to='sc_app.benefittype')),
                ('senior_citizen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disbursements', to='sc_app.seniorcitizen')),
            ],
            options={
                'verbose_name_plural': 'Benefit Disbursements',
                'indexes': [models.Index(fields=['disbursement_date', 'benefit_type'], name='sc_app_bene_disburs_da652d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='seniorcitizen',
            index=models.Index(fields=['osca_id'], name='sc_app_seni_osca_id_fbbcdd_idx'),
        ),
    ]
